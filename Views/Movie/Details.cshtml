@model goblin_cheese.Models.Movie.Movie
@using goblin_cheese.Models.Movie;
@using System.Globalization;

@{
    ViewData["Title"] = "Details";
    CultureInfo ci = new CultureInfo("en-us");
    double budget = Model.Budget.GetValueOrDefault(0.0);
    double revenue = Model.Revenue.GetValueOrDefault(0.0);
    double runtime = Model.Runtime.GetValueOrDefault(0.0);
    TimeSpan ts = TimeSpan.FromHours(runtime);
}


<div class="movie-details px-2 mb-4">
    <div class="btn-group btn-group-lg w-100 bg-dark rounded-3" role="group">
        <a class="btn btn-outline-light border-0" asp-action="Index"><i class="fa-regular fa-circle-left fa-xl"></i></a>
        <a class="btn btn-outline-warning border-0" asp-action="Edit" asp-route-id="@Model.Id"><i class="fa-solid fa-pen-to-square fa-xl"></i></a>
        <a class="btn btn-outline-danger border-0" asp-action="Delete" asp-route-id="@Model.Id"><i class="fa-solid fa-trash-can fa-xl"></i></a>
    </div>
    <hr />
    <div class="row mb-4">
        <div class="col-3">
            @if (Model.Poster != null)
            {
                <img src="data:image/@Model.Poster.ContentType;base64, @Model.Poster.getData()"
                    class="w-100 border border-dark rounded-3">
            }
        </div>
        <div class="col-7 text-center px-2 py-1">
            <h1 class="display-2 mb-2">@Html.DisplayFor(model => model.Title)</h1>
            @if (Model.Genres.Count() != 0)
            {
                <p class="fs-5 mb-2 fw-bold">
                @foreach (TVGenre genre in Model.Genres)
                {
                    if (genre.Equals(Model.Genres.Last())) 
                    {
                        @genre.Name
                    } else {
                        @genre.Name<em>,</em>
                    }
                }
                </p>
            }
            <blockquote class="fs-5 movie-details-overview">@Html.DisplayFor(model => model.Overview)</blockquote>
        </div>
        <div class="col-2">
            <ul class="list-group list-group-flush border border-dark rounded-3 h-100 bg-light">
                <li class="list-group-item d-flex justify-content-between align-items-start mt-4 mb-1">
                    <div>
                        <div class="fw-bold fs-5">Release Date</div>
                        <p class="fw-bold">@Html.DisplayFor(model => model.ReleaseDate)</p>
                    </div>
                </li>
                
                <li class="list-group-item d-flex justify-content-between align-items-start mb-1">
                    <div>
                        <div class="fw-bold fs-5">Runtime</div>
                        @if (runtime != 0.0)
                        {
                            <p class="fw-bold">@ts.ToString("h' hours and 'm") minutes</p>
                        } else {
                            <p class="fw-bold text-secondary">Unknown / To be determined</p>
                        }
                    </div>
                </li>
               
                <li class="list-group-item d-flex justify-content-between align-items-start mb-1">
                    <div>
                        <div class="fw-bold fs-5">Budget</div>
                            @if (budget != 0.0)
                            {   
                                <p class="fw-bold">@budget.ToString("C", ci)</p>
                            } else {
                                <p class="fw-bold text-secondary">Unknown / To be determined</p>
                            }
                    </div>
                </li>
                
            
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div>
                        <div class="fw-bold fs-5">Revenue</div>
                            @if (revenue != 0)
                            {
                                @if (revenue > budget*2)
                                {
                                    <p class="fw-bold text-success">@revenue.ToString("C", ci)</p>
                                } else if (revenue >= budget)
                                {
                                    <p class="fw-bold">@revenue.ToString("C", ci)</p>
                                } else
                                {
                                    <p class="fw-bold text-danger">@revenue.ToString("C", ci)</p>
                                }
                            } else {
                                <p class="fw-bold text-secondary">Unknown / To be determined</p>
                            }
                    </div>
                </li>
            </ul>
        </div>
    </div>
    <hr />
    <div class="row">
        <div id="movieCarousel" class="carousel slide">
            <div class="carousel-inner rounded-3 border border-dark">
                @foreach (Backdrop? backdrop in Model.Backdrops)
                {
                    if (backdrop.Id != null)
                    {
                        if (backdrop.Id.Equals(Model.Backdrops.First().Id))
                        {
                            <div class="carousel-item active">
                                <img src="data:image/@backdrop.ContentType;base64, @backdrop.getData()" class="d-block w-100" alt="...">
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img src="data:image/@backdrop.ContentType;base64, @backdrop.getData()" class="d-block w-100" alt="...">
                            </div>
                        }
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#movieCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#movieCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>